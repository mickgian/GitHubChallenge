{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "3e6c04e9aa827dcc39f4fae3d2f82e83",
    "entities": [
      {
        "tableName": "repo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `url` TEXT, `stargazersCount` INTEGER NOT NULL, `watchersCount` INTEGER NOT NULL, `language` TEXT, `forksCount` INTEGER NOT NULL, `watchers` INTEGER NOT NULL, `commitsCount` INTEGER NOT NULL, `defaultBranch` TEXT, `owner_login` TEXT, `owner_id` INTEGER, `owner_nodeId` TEXT, `owner_avatarUrl` TEXT, `owner_gravatarId` TEXT, `owner_url` TEXT, `owner_htmlUrl` TEXT, `owner_followersUrl` TEXT, `owner_followingUrl` TEXT, `owner_gistsUrl` TEXT, `owner_starredUrl` TEXT, `owner_subscriptionsUrl` TEXT, `owner_organizationsUrl` TEXT, `owner_reposUrl` TEXT, `owner_eventsUrl` TEXT, `owner_receivedEventsUrl` TEXT, `owner_type` TEXT, `owner_siteAdmin` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stargazersCount",
            "columnName": "stargazersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "watchersCount",
            "columnName": "watchersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "forksCount",
            "columnName": "forksCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "watchers",
            "columnName": "watchers",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commitsCount",
            "columnName": "commitsCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultBranch",
            "columnName": "defaultBranch",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.login",
            "columnName": "owner_login",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.id",
            "columnName": "owner_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "owner.nodeId",
            "columnName": "owner_nodeId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.avatarUrl",
            "columnName": "owner_avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.gravatarId",
            "columnName": "owner_gravatarId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.url",
            "columnName": "owner_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.htmlUrl",
            "columnName": "owner_htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.followersUrl",
            "columnName": "owner_followersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.followingUrl",
            "columnName": "owner_followingUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.gistsUrl",
            "columnName": "owner_gistsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.starredUrl",
            "columnName": "owner_starredUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.subscriptionsUrl",
            "columnName": "owner_subscriptionsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.organizationsUrl",
            "columnName": "owner_organizationsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.reposUrl",
            "columnName": "owner_reposUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.eventsUrl",
            "columnName": "owner_eventsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.receivedEventsUrl",
            "columnName": "owner_receivedEventsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.type",
            "columnName": "owner_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.siteAdmin",
            "columnName": "owner_siteAdmin",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"3e6c04e9aa827dcc39f4fae3d2f82e83\")"
    ]
  }
}